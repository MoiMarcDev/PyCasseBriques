pyCasseBriques : petit jeu de casse-briques en Python avec la librairie Pygame

Auteur : Théo DESCOTTES

Le projet consiste à développer un jeu casse-briques en 2D en utilisant la bibliothèque Pygame de Python. 
Le joueur contrôle une raquette pour faire rebondir une balle et détruire des briques. 
Le joueur doit détruire toutes les briques sur l'écran pour passer au niveau suivant.

Fonctionnalités :
- Raquette Contrôlable : Le joueur pourra déplacer une raquette horizontalement avec les touches du clavier pour renvoyer la balle.
- Balle Rebondissante : La balle rebondira sur les murs, la raquette et les briques.
- Briques : Les briques se casseront lorsqu'elles seront touchées par la balle.
- Niveaux Multiples : Le jeu comportera plusieurs niveaux avec des configurations de briques différentes.
- Score : Un système de score qui augmentera à chaque brique détruite.

Technologies Utilisées :
- Python: Le langage principal utilisé pour le développement du jeu.
- Pygame: Une bibliothèque Python pour le développement de jeux 2D avec gestion des graphismes, des événements et des interactions.

Étapes de développement (plan initial):
- Installation et Configuration de Pygame : Installer Pygame et configurer l'environnement de développement.
- Création de la Fenêtre de Jeu : Configurer la fenêtre de jeu et afficher un arrière-plan de base.
- Développement de la Raquette : Programmer les contrôles de la raquette pour la déplacer horizontalement.
- Mouvement de la Balle : Implémenter la logique pour faire rebondir la balle sur les murs, la raquette et les briques.
- Création des Briques : Ajouter des briques destructibles à l'écran.
- Gestion des Collisions : Développer la logique pour gérer les collisions entre la balle et les briques.
- Système de Niveaux : Concevoir plusieurs niveaux avec des configurations de briques différentes.
- Système de Score : Ajouter un système de score pour suivre les briques détruites.

Objectif : à travers ce projet, je souhaite m'amuser et montrer mon intérêt et mes compétences en programmation !

